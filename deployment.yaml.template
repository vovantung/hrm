apiVersion: apps/v1
kind: Deployment
metadata:
  name: hrm
  namespace: backend
  labels:
    app: hrm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hrm
  template:
    metadata:
      labels:
        app: hrm
    spec:
      containers:
        - name: hrm
          image: 211125364313.dkr.ecr.ap-southeast-1.amazonaws.com/hrm:__VERSION__
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: backend-logs
              mountPath: /logs
          resources:
            requests:
              cpu: "1200m"
            limits:
              cpu: "1200m"
      volumes:
        - name: backend-logs
          nfs:
            server: 192.168.98.150
            path: /mnt/data/nfs/backend_logs
      imagePullSecrets:
        - name: ecr-secret
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hrm
  namespace: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hrm
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 90
---
#apiVersion: v1
#kind: Service
#metadata:
#  name: hrm
#spec:
#  selector:
#    app: hrm
#  ports:
#    - name: http
#      protocol: TCP
#      port: 8080
#      targetPort: 8080
#  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: hrm
  namespace: backend
  labels:
    app: hrm   # Phải trùng với ServiceMonitor
spec:
  ports:
    - name: http   # Phải trùng với ServiceMonitor endpoints.port
      port: 8080
      targetPort: 8080
  selector:
    app: hrm

---
#apiVersion: v1
#kind: Service
#metadata:
#  name: node-port-app1
#spec:
#  selector:
#    app: app1
#  type: NodePort
#  ports:
#    - port: 8080
#      targetPort: 8080
#      nodePort: 30001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: hrm
  namespace: backend
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    cert-manager.io/cluster-issuer: letsencrypt-http01
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
spec:
  ingressClassName: nginx
  tls:
    - hosts:
        - backend.txuapp.com
      secretName: backend-tls
  rules:
    - host: backend.txuapp.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: hrm
                port:
                  number: 8080

---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: hrm-service-monitor
  namespace: backend
  labels:
    release: monitoring
spec:
  selector:
    matchLabels:
      app: hrm
  endpoints:
    - port: http
      path: /actuator/prometheus
      interval: 15s
      scheme: http


